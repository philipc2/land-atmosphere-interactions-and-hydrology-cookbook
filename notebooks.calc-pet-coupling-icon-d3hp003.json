{"version":2,"kind":"Notebook","sha256":"af093b25ca3b219243897f5f61cd78729515de3c69e3edc0e33e509262757dd1","slug":"notebooks.calc-pet-coupling-icon-d3hp003","location":"/notebooks/calc_PET_coupling_icon_d3hp003.ipynb","dependencies":[],"frontmatter":{"title":"Calculate the SM-T coupling using icon_d3hp003","content_includes_title":true,"kernelspec":{"name":"conda-env-miniconda3-hackathon_env-py","display_name":"Python [conda env:miniconda3-hackathon_env]","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/land-atmosphere-interactions-and-hydrology-cookbook","copyright":"2025","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/land-atmosphere-interactions-and-hydrology-cookbook/blob/main/notebooks/calc_PET_coupling_icon_d3hp003.ipynb","exports":[{"format":"ipynb","filename":"calc_PET_coupling_icon_d3hp003.ipynb","url":"/land-atmosphere-interactions-and-hydrology-cookbook/build/calc_PET_coupling_ic-03757cce4bfd238fb18344d9ba34fa3f.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the SM-T coupling using icon_d3hp003","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h5OjI1lI00"}],"identifier":"calculate-the-sm-t-coupling-using-icon-d3hp003","label":"Calculate the SM-T coupling using icon_d3hp003","html_id":"calculate-the-sm-t-coupling-using-icon-d3hp003","implicit":true,"key":"iUcJGkq24h"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Author: Yifan Cheng","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l70moqtlx3"}],"key":"ib4DOso881"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Reference:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MpTyBVDNYt"}],"key":"TgjiuLQKBO"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://github.com/pdirmeyer/l-a-cheat-sheets/blob/main/Coupling_metrics_V30_SM-T.pdf","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Coupling​_metrics​_V30​_SM​-T​.pdf","key":"zFjwy8tVij"}],"urlSource":"https://github.com/pdirmeyer/l-a-cheat-sheets/blob/main/Coupling_metrics_V30_SM-T.pdf","data":{"kind":"file","org":"pdirmeyer","repo":"l-a-cheat-sheets","reference":"main","file":"Coupling_metrics_V30_SM-T.pdf","raw":"https://raw.githubusercontent.com/pdirmeyer/l-a-cheat-sheets/main/Coupling_metrics_V30_SM-T.pdf"},"internal":false,"protocol":"github","key":"ZzAg2EeEZM"}],"key":"SPQtoHRE4a"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"cite","url":"https://doi.org/10.1029/2012GL053703","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Miralles ","key":"wr8zTYWEWS"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"iVquosWX6Q"}],"key":"clW3uDjBhD"},{"type":"text","value":" (2012)","key":"Jvb3xJGK4v"}],"kind":"narrative","label":"Miralles_2012","identifier":"https://doi.org/10.1029/2012GL053703","enumerator":"1","key":"Cfyq3mRlMq"}],"key":"j5yqj4YjLV"}],"key":"xxAYUfrgQq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import datetime\ncurrent_time = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M\")\nprint(f'Last updated at {current_time}')","key":"bJJasXYtHV"},{"type":"output","id":"TzmjB7DcM9xVEl5at2TpX","data":[{"name":"stdout","output_type":"stream","text":"Last updated at 2025-05-16 09:43\n"}],"key":"rOiyqmSLQQ"}],"key":"ZGdpgtQw35"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from pathlib import Path \nimport xarray as xr\nimport cartopy.crs as ccrs\nimport uxarray as ux\nimport numpy as np\nimport cartopy.feature as cf\nimport matplotlib.pyplot as plt\nimport pandas as pd","key":"rGfzTwQB8m"},{"type":"output","id":"gb37iDOa4bURkqR1P16L-","data":[],"key":"Sakbq7P0xV"}],"key":"XK6YOQ5DZ6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import intake\n\ncat_url = \"https://digital-earths-global-hackathon.github.io/catalog/catalog.yaml\"\ncat = intake.open_catalog(cat_url).NCAR\n\n# check on global models\nmodel_run1 = cat['icon_d3hp003']\nmodel_run2 = cat['ifs_tco3999-ng5_deepoff']\nmodel_run3 = cat['nicam_gl11']\nmodel_run4 = cat['mpas_dyamond3']\nmodel_run5 = cat['mpas_dyamond2']\nmodel_run6 = cat['scream_ne120'] #3hourly average","key":"SyymikNf4h"},{"type":"output","id":"KZx0qkZfOiEVcrozfn4o2","data":[],"key":"glcxcU5JFA"}],"key":"JPOMke070Q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_fine1 = model_run1(zoom=7,time='P1D').to_dask()","key":"nNGoUpEJ2X"},{"type":"output","id":"kIkuQ5OgpNBYqWUJ4eBiS","data":[{"name":"stderr","output_type":"stream","text":"/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/intake_xarray/base.py:21: FutureWarning: The return type of `Dataset.dims` will be changed to return a set of dimension names in future, in order to be more consistent with `DataArray.dims`. To access a mapping from dimension names to lengths, please use `Dataset.sizes`.\n  'dims': dict(self._ds.dims),\n"}],"key":"RXUK4ugA7e"}],"key":"dDkPDoikNi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"uxds_fine1 = ux.UxDataset.from_healpix(ds_fine1)","key":"h58tD29CYI"},{"type":"output","id":"0fh-RGZvNylBDLNGMkagl","data":[],"key":"XZNhuSXAQP"}],"key":"vqC2P3MYFw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"var_longname_dict1 = {\n    var: ds_fine1[var].attrs.get(\"long_name\", \"N/A\")\n    for var in ds_fine1.data_vars\n}","key":"Gj7FTBsRFZ"},{"type":"output","id":"ojYw0LYlYACej544_jwTa","data":[],"key":"vFQEHtAdXn"}],"key":"Hv2Ya8k5nv"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"var_longname_dict1","key":"PpPBBvgJSo"},{"type":"output","id":"_1wUBZR6JBVJwNozXI-rU","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"{'clivi': 'cloud ice path',\n 'clt': 'total cloud cover',\n 'clwvi': 'cloud condensed water path',\n 'egpvi': 'Atmosphere Geopotential Energy Content',\n 'einvi': 'Atmosphere Moist Internal Energy Content',\n 'ekhvi': 'Atmosphere Horizontal Kinetic Energy Content',\n 'ekvvi': 'Atmosphere Vertical Kinetic Energy Content',\n 'hflsd': 'latent heat flux',\n 'hfssd': 'sensible heat flux',\n 'hur': 'relative humidity',\n 'hus': 'Specific humidity',\n 'huss': 'specific humidity in 2m',\n 'mrso': 'Water content of soil layers',\n 'o3vi': 'ozone path',\n 'orog': 'surface altitude',\n 'pr': 'precipitation flux',\n 'prs': 'large-scale precipitation flux (snow)',\n 'prw': 'water vapor path',\n 'ps': 'surface pressure',\n 'psl': 'mean sea level pressure',\n 'qall': 'mass fraction of all hydrometeors in air',\n 'rlds': 'surface downwelling longwave radiation',\n 'rldscs': 'surface downwelling clear-sky longwave radiation',\n 'rlus': 'surface upwelling longwave radiation',\n 'rlut': 'toa outgoing longwave radiation',\n 'rlutcs': 'toa outgoing clear-sky longwave radiation',\n 'rsds': 'surface downwelling shortwave radiation',\n 'rsdscs': 'surface downwelling clear-sky shortwave radiation',\n 'rsdt': 'toa incident shortwave radiation',\n 'rsus': 'surface upwelling shortwave radiation',\n 'rsuscs': 'surface upwelling clear-sky shortwave radiation',\n 'rsut': 'toa outgoing shortwave radiation',\n 'rsutcs': 'toa outgoing clear-sky shortwave radiation',\n 'rva': 'Vorticity',\n 'sftgif': 'cell area fraction occupied by land ice',\n 'sftlf': 'cell area fraction occupied by land including lakes',\n 'siconc': 'fraction of ocean covered by sea ice',\n 'sncvfa': 'Snow area fraction',\n 'swe': 'Snow amount',\n 'ta': 'Temperature',\n 'tas': 'temperature in 2m',\n 'tauu': 'u-momentum flux at the surface',\n 'tauv': 'v-momentum flux at the surface',\n 'tend_egpdynvi': 'Tendency of Atmosphere Geopotential Energy Content due to Dynamics',\n 'tend_eincldvi': 'Tendency of Atmosphere Moist Internal Energy Content due to Cloud Microphysics',\n 'tend_eindynvi': 'Tendency of Atmosphere Moist Internal Energy Content due to Dynamics',\n 'tend_einradvi': 'Tendency of Atmosphere Moist Internal Energy Content due to Radiation',\n 'tend_eintmxvi': 'Tendency of Atmosphere Moist Internal Energy Content due to Turbulent Mixing',\n 'tend_ekhdynvi': 'Tendency of Atmosphere Horizontal Kinetic Energy Content due to Dynamics',\n 'tend_ekhtmxvi': 'Tendency of Atmosphere Horizontal Kinetic Energy Content due to Turbulent Mixing',\n 'tend_ekvdynvi': 'Tendency of Atmosphere Vertical Kinetic Energy Content due to Dynamics',\n 'ts': 'surface temperature',\n 'ua': 'Zonal wind',\n 'uas': 'zonal wind in 10m',\n 'va': 'Meridional wind',\n 'vas': 'meridional wind in 10m',\n 'wa': 'vertical velocity in m/s',\n 'zg': 'geometric height at full level center'}","content_type":"text/plain"}}}],"key":"JjIR5FPsJX"}],"key":"CYH4nbG29q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# 'pres_sfc': 'surface pressure'\n#  'rlds': 'surface downwelling longwave radiation',\n#  'rlus': 'surface upwelling longwave radiation'\n# 'rsds': 'surface downwelling shortwave radiation',\n#  'rsus': 'surface upwelling shortwave radiation',\n# 'hfls': 'latent heat flux',\n#  'hfss': 'sensible heat flux',\n# 'tas': 'temperature in 2m',","key":"RWoYeeql8H"},{"type":"output","id":"f-L-92Y_vb0PYm-sIKKsC","data":[],"key":"sDmhuhFBX3"}],"key":"vEvGDdVqbO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"land_mask=ux.UxDataArray((uxds_fine1.sftlf==1).astype(int),uxgrid=uxds_fine1.uxgrid)","key":"ASj72eGpfd"},{"type":"output","id":"7q_cywtXxM5Svbq4oXr_K","data":[],"key":"oBK3pwZkiL"}],"key":"uLTC1hqsuw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"land_mask.plot.points(\n    cmap=\"inferno\",\n    rasterize=True,\n    dynamic=False,\n    features=[\"coastline\", \"borders\"]\n)","key":"Fcp3dSuIYA"},{"type":"output","id":"Ul_rWONSz2Qq5xXK1eaUs","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":32,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"ade852b3-3032-4655-886c-6e065cd93266"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"472c46a22ec3d008794f3030eefe585e","path":"/land-atmosphere-interactions-and-hydrology-cookbook/build/472c46a22ec3d008794f3030eefe585e.html"},"text/plain":{"content":":Overlay\n   .Image.I     :Image   [lon,lat]   (lon_lat z)\n   .Borders.I   :Feature   [Longitude,Latitude]\n   .Coastline.I :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"eIeWDef6yg"}],"key":"QpK0jOiX8U"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"uxds_fine1=uxds_fine1.sel(time=uxds_fine1.time.dt.year==2020)","key":"qFKUcDGczy"},{"type":"output","id":"UAhWjf5yYjKklw8lcd2FZ","data":[],"key":"zMWIpArTru"}],"key":"L8oTrrzrg6"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nsel_vswc=(uxds_fine1['mrso'])\nsel_le=(uxds_fine1['hflsd']) #W/m2\nsel_h=(uxds_fine1['hfssd']) #W/m2\nsel_rnet=((uxds_fine1['rlds']-uxds_fine1['rlus']+uxds_fine1['rsds']-uxds_fine1['rsus'])) #W/m2\nsel_t2m=(uxds_fine1['tas']-273.15) #C\nsel_sp=(uxds_fine1['ps']/1000) #kPa","key":"RaOhFR2jue"},{"type":"output","id":"pB7DTosm2xU6D5_0R9Qx6","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 10.2 s, sys: 2.08 s, total: 12.3 s\nWall time: 15.7 s\n"}],"key":"lWEmAnyCYR"}],"key":"dFYhzeYs6u"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nsel_le_DJF=sel_le.sel(time=(uxds_fine1.time.dt.month.isin([1,2,12]))&(uxds_fine1.time.dt.year == 2020)).where(land_mask)\nsel_h_DJF=sel_h.sel(time=(uxds_fine1.time.dt.month.isin([1,2,12]))&(uxds_fine1.time.dt.year == 2020)).where(land_mask)\nsel_rnet_DJF=sel_rnet.sel(time=(uxds_fine1.time.dt.month.isin([1,2,12]))&(uxds_fine1.time.dt.year == 2020)).where(land_mask)\nsel_t2m_DJF=sel_t2m.sel(time=(uxds_fine1.time.dt.month.isin([1,2,12]))&(uxds_fine1.time.dt.year == 2020)).where(land_mask)\nsel_sp_DJF=sel_sp.sel(time=(uxds_fine1.time.dt.month.isin([1,2,12]))&(uxds_fine1.time.dt.year == 2020)).where(land_mask)","key":"L35erDKkSJ"},{"type":"output","id":"2FiWgHjGcUFaAFYnrUesI","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 1min 4s, sys: 28 s, total: 1min 32s\nWall time: 2min 56s\n"}],"key":"nfJNF4WRJh"}],"key":"RvquPEUHst"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nsel_le_JJA=sel_le.sel(time=(uxds_fine1.time.dt.month.isin([6,7,8])&(uxds_fine1.time.dt.year.isin([2020])))).where(land_mask)\nsel_h_JJA=sel_h.sel(time=(uxds_fine1.time.dt.month.isin([6,7,8])&(uxds_fine1.time.dt.year.isin([2020])))).where(land_mask)\nsel_rnet_JJA=sel_rnet.sel(time=(uxds_fine1.time.dt.month.isin([6,7,8])&(uxds_fine1.time.dt.year.isin([2020])))).where(land_mask)\nsel_t2m_JJA=sel_t2m.sel(time=(uxds_fine1.time.dt.month.isin([6,7,8])&(uxds_fine1.time.dt.year.isin([2020])))).where(land_mask)\nsel_sp_JJA=sel_sp.sel(time=(uxds_fine1.time.dt.month.isin([6,7,8])&(uxds_fine1.time.dt.year.isin([2020])))).where(land_mask)","key":"ofJs3oRcrl"},{"type":"output","id":"_5__67_a8uPdAiRydNK2q","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 1min 4s, sys: 32.2 s, total: 1min 36s\nWall time: 3min 31s\n"}],"key":"U56hk95ex6"}],"key":"gutbmrGICH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def saturation_vapor_pressure(T):\n    return 6.112*np.exp((17.67*T)/(T+243.5))*0.1  # hPa -> kPa\n\ndef delta_svp(T):\n    es=saturation_vapor_pressure(T)\n    return (4302.645*es)/((T+243.5)**2)  # in kPa/°C\n\ndef alpha_piecewise(vswc): # values from literature based on Priestley–Taylor equation\n    return xr.where(\n        vswc < 0.1, 0.8,\n        xr.where(vswc < 0.2, 1.0, 1.26)\n    )\n\ndef calc_gamma(P_kPa):\n    cp=1.013e3      # J/kg/°C\n    epsilon=0.622\n    lambda_v=2.45e6 # Latent heat of vaporization J/kg\n    return (cp*P_kPa)/(epsilon*lambda_v)  # in kPa/°C\n\ndef priestley_taylor_ET(vswc, Rnet, T, P_kPa): # assume Rnet=LE+H\n    alpha=alpha_piecewise(vswc)\n    delta=delta_svp(T)\n    gamma=calc_gamma(P_kPa)\n    coeff=alpha*(delta/(delta+gamma))\n    return coeff*Rnet  # W/m2\n\ndef safe_corr(x, y, dim='time', min_count=30):\n    valid = x.notnull() & y.notnull()\n    count = valid.sum(dim=dim)\n    r = xr.corr(x, y, dim=dim)\n    return r.where(count >= min_count)\n    \ndef calculate_coupling_index(vswc, Rnet, LE, T, P):\n    H=Rnet-LE\n\n    LE_p=priestley_taylor_ET(vswc, Rnet, T, P)\n    H_p=Rnet-LE_p\n    \n    H_xr=H.to_dataset(name='H')\n    Hp_xr=H_p.to_dataset(name='Hp')\n    T_xr=T.to_dataset(name='T2M')\n\n    H_corr = safe_corr(H, T, dim='time', min_count=30)\n    Hp_corr = safe_corr(H_p, T, dim='time', min_count=30)\n\n    PI=H_corr-Hp_corr\n    PI.name='coupling_index'\n\n    return PI","key":"Foe14Ed3FO"},{"type":"output","id":"DLwNKZ0x1tVyuhIknf_JA","data":[],"key":"EsU0pjj7K2"}],"key":"Yv5IrA3UYA"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nPI_DJF=calculate_coupling_index(sel_rnet_DJF,sel_le_DJF,sel_t2m_DJF,sel_sp_DJF).compute()","key":"cpkRxSw98X"},{"type":"output","id":"ywPrYbEM1YcJCFs0wvSM6","data":[{"name":"stderr","output_type":"stream","text":"/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n"},{"name":"stdout","output_type":"stream","text":"CPU times: user 1min 30s, sys: 1min 11s, total: 2min 41s\nWall time: 4min 52s\n"}],"key":"JLyQAWsLAh"}],"key":"PVNVGuK4xd"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"PI_JJA=calculate_coupling_index(sel_rnet_JJA,sel_le_JJA,sel_t2m_JJA,sel_sp_JJA).compute()","key":"AIXnYmYxUH"},{"type":"output","id":"hGg6TaDd8kGj3IhflJHzm","data":[{"name":"stderr","output_type":"stream","text":"/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n/glade/work/yifanc17/miniconda3/envs/hackathon_env/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2019: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n"}],"key":"IUtCgqivTl"}],"key":"aBs1zr3lx8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"PI_DJF.plot()","key":"skfOybqg7s"},{"type":"output","id":"GuKK3b9rjoVYGba31zTMk","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":61,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"7e7c8ffc-4336-4f9c-a873-7da3768dc65b"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"94d0c5352c8a89be2ccebeaf2e8cd0d0","path":"/land-atmosphere-interactions-and-hydrology-cookbook/build/94d0c5352c8a89be2ccebeaf2e8cd0d0.html"},"text/plain":{"content":":Image   [x,y]   (x_y coupling_index)","content_type":"text/plain"}}}],"key":"LhK6Hd7FaN"}],"key":"wKZwKH5WWd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"PI_JJA.plot()","key":"GqxiI1bOqB"},{"type":"output","id":"-ZfV1gzDMCeTr14sg6DpE","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":62,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"f87eab4b-844a-4447-b31e-3354c22b9743"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"2489fc1b12071a47ee3a8358366d0ce4","path":"/land-atmosphere-interactions-and-hydrology-cookbook/build/2489fc1b12071a47ee3a8358366d0ce4.html"},"text/plain":{"content":":Image   [x,y]   (x_y coupling_index)","content_type":"text/plain"}}}],"key":"zOYKpjQSSE"}],"key":"CGQy9NTzNk"}],"key":"TkYdOyxO1s"},"references":{"cite":{"order":["Miralles_2012"],"data":{"Miralles_2012":{"label":"Miralles_2012","enumerator":"1","doi":"10.1029/2012gl053703","html":"Miralles, D. G., van den Berg, M. J., Teuling, A. J., & de Jeu, R. A. M. (2012). Soil moisture‐temperature coupling: A multiscale observational analysis. <i>Geophysical Research Letters</i>, <i>39</i>(21). <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.1029/2012gl053703\">10.1029/2012gl053703</a>","url":"https://doi.org/10.1029/2012gl053703"}}}},"footer":{"navigation":{"prev":{"title":"How to Cite This Cookbook","url":"/notebooks/how-to-cite","group":"Preamble"},"next":{"title":"Calculate the SM-T coupling using ifs_tco3999-ng5_rcbmf_cf","url":"/notebooks/calc-pet-coupling-ifs-tco3999-ng5-rcbmf-cf","group":"Notebooks (work in progress)"}}},"domain":"http://localhost:3000"}