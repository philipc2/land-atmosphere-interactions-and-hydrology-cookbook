{"version":2,"kind":"Notebook","sha256":"42ab17c1a0bbe346c7bfc7e6596c6315d6c91f0d7ed87af00374b22defff0b99","slug":"notebooks.soilmoisture-precipicon-2","location":"/notebooks/soilmoisture_precipICON-2.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"2025-digital-earths-global-hackathon","display_name":"2025 Digital Earths Hackathon","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/land-atmosphere-interactions-and-hydrology-cookbook","copyright":"2025","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/land-atmosphere-interactions-and-hydrology-cookbook/blob/main/notebooks/soilmoisture_precipICON-2.ipynb","exports":[{"format":"ipynb","filename":"soilmoisture_precipICON-2.ipynb","url":"/land-atmosphere-interactions-and-hydrology-cookbook/build/soilmoisture_precipI-31ef86374660de6e79b5ea1526d48174.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import intake\nimport uxarray as ux\nimport cartopy.crs as ccrs\nimport geoviews.feature as gf\nimport holoviews as hv\n\nimport healpy as hp\nimport numpy as np\n\n#Calculates the effect of soil moisture anomalies on afternoon precipitation using the ICON dataset for 2020. Inspired by Welty et al 2019 observational study.\n#ERIK JANZON\n#UNIVERSITY OF NEBRASKA-LINCOLN\n\n#DIGITAL EARTHS HACKATHON\n#NCAR NODE\n#MAY 2025\n\n#MAKE SURE THE CHANGE THE CONDITIONS BELOW (CELL 42, LINE 36-38) TO REFLECT THE SEASON/HOURS YOU WANT TO LOOK AT \n\n#MAKE SURE TO ADJUST PLOT TITLES\n\n#Issues:\n#1.) Only figured out how to look at one time zone at a time, so \"afternoon\" is based on CDT in this case. Maybe not a problem since the data is only \n#    3 hourly?\n#2.) Cannot calculate moisture convergence. Tried to use uxarray.gradient(), but no luck because one cannot remap to grid cell faces for comparison.\n#\n#3.) Only one year of data in ICON. Longer model datasets missing soil moisture (unless I missed something...)\n\n#4.) Welty et al 2019 performed more useful statistics. See Yifang Cheng's notebook for example of probabilities.\n\n#5.) HARD CODED STUFF:\n    #a.) MAKE SURE THE CHANGE THE CONDITIONS BELOW (CELL 42, LINE 36-38) TO REFLECT THE SEASON/HOURS YOU WANT TO LOOK AT \n\n    #b.) MAKE SURE TO ADJUST PLOT TITLES\n\nzoom=8\n\n#UTC offset.\noffset=6;\n\n#SUBSETS FOR DIFFERENT AREAS.\n#CONUS\nlon_bounds = (-130, -50)\nlat_bounds = (20, 60)\n\n#Central South America\n#lon_bounds = (-90, -30)\n#lat_bounds = (-40, 0)\n\n#Southern Africa\n#lon_bounds = (0, -40)\n#lat_bounds = (-30, 0)\n\nfrom datetime import datetime\n\n#Set up data fetch and list catalogue\n\nurl=\"https://digital-earths-global-hackathon.github.io/catalog/catalog.yaml\"\n\ncat = intake.open_catalog(url).NCAR\n\nlist(cat)","key":"Bsep50PLds"},{"type":"output","id":"lhDHI_7eJcDb0p_p8rHPx","data":[],"key":"XSv9vlYdwT"}],"key":"pSXyupzvwP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#Start with mpas_dyamond1\n\nmodel_run=cat.icon_d3hp003\nmodel_run().describe()","key":"YQCBWPMPuC"},{"type":"output","id":"Y5GGuKlJ0RU3vLlP1gWDE","data":[],"key":"tYiWhb7sXZ"}],"key":"Ja3iWX0R7Y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#Play with lower zoom level, fetching data. Increase zoom later.\n\nds=model_run(zoom=zoom,time='PT3H').to_dask()\nuxds=ux.UxDataset.from_healpix(ds)\ntimes=uxds.time\n\nhours=uxds.time.dt.hour\nuxds\n","key":"fveDCg4L9Z"},{"type":"output","id":"e7-XKHpugBD7NjER05tBt","data":[],"key":"MhOcu6ZjHd"}],"key":"qrIvcfWcJX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#Create subsets of soil moisture and precipitation for northern hemisphere south of 60 degrees north across continents\n\n#lon_bounds = (-130, -50)\n#lat_bounds = (20, 60)\n\n#lon_bounds = (-90, -30)\n#lat_bounds = (-40, 0)\n\n#qv=uxds[\"ie\"].subset.bounding_box(\n#    lon_bounds,\n#    lat_bounds,\n#)\n\nuxsmois = uxds[\"mrso\"].subset.bounding_box(\n    lon_bounds,\n    lat_bounds,\n)\n\nuxrain = uxds[\"pr\"].subset.bounding_box(\n    lon_bounds,\n    lat_bounds,\n)\n\n#conditionafternoon=((uxrain.time.dt.hour >= 12+6) & (uxrain.time.dt.hour <= 17+6))\n\n#conditionmorning=((uxrain.time.dt.hour >= 5+6) & (uxrain.time.dt.hour < 12+6))\n\n#conditionafternoon=((uxrain.time.dt.month >= 12) & (uxrain.time.dt.month <= 2) & (uxrain.time.dt.hour >= 12+offset) & (uxrain.time.dt.hour <= 17+offset))\n\n#conditionmorning=((uxrain.time.dt.month >= 12) & (uxrain.time.dt.month <= 2) & (uxrain.time.dt.hour >= 5+offset) & (uxrain.time.dt.hour < 12+offset))\n#wspd=((u**2)+(v**2))**(1/2)\n#qvu=qv*wspd\n\n\n#MAKE SURE TO CHANGE THIS WHEN LOOKING AT NORTH/SOUTH HEMISPHERE!!!!!!\nconditionafternoon=(((uxrain.time.dt.month >= 6) | (uxrain.time.dt.month <= 8)) & (uxrain.time.dt.hour >= 12+offset) & (uxrain.time.dt.hour <= 17+offset))\n\nconditionmorning=(((uxrain.time.dt.month >= 6) | (uxrain.time.dt.month <= 8)) & (uxrain.time.dt.hour >= 5+offset) & (uxrain.time.dt.hour < 12+offset))\n\n\n\n\nuxrain_aft=uxrain[conditionafternoon]\nuxrain_mor=uxrain[conditionmorning]\nuxsmois_mor=uxsmois[conditionmorning]\n#qv_mor=qv[conditionmorning]\nuxrain_aft.time\n\n","key":"aUpmkrY4dC"},{"type":"output","id":"1DujikDqq8dv5MZAKV66R","data":[],"key":"bzD6nx0hcK"}],"key":"cdnQ5parIf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_opts = {\"width\": 700, \"height\": 350}\n\n#uxrain_mean_aft=uxrain_aft.sum(dim=\"nVertLevels\") \n\n#uxrain_mean_mor=uxrain_mor.sum(dim=\"nVertLevels\") \n\nuxrain_mean_mor=uxrain_mor\n\nuxrain_mean_aft=uxrain_aft\n\nuxsmois_mean_mor=uxsmois_mor.mean(dim=\"soil_level\") \n#uxsmois_mean_mor=uxsmois_mean_mor\n\n#uxsmois_mean_mor=uxsmois_mor.mean(dim=\"soil_level\") \nuxrain_plot=uxrain_mean_aft.mean(dim=\"time\")\n\n\n\nfeatures = gf.coastline(\n    projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\"\n) * gf.states(projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\")\n\nuxrain_plot.plot(\n    rasterize=True,\n    periodic_elements=\"exclude\",\n    title=\"Mean Afternoon Total Column Rain Mixing Ratio, JJA, ERA5\",\n    **plot_opts,\n) * features","key":"EzgUCOtTFQ"},{"type":"output","id":"DUrbT32MUIBuR6cDBS6sB","data":[],"key":"IL07m8t05v"}],"key":"nveefaQBk5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Condition: values greater than 0.5\n#uxrain_max=uxrain_mean_aft.max(dim=\"n_face\")\n\n\n\n\n# Apply the condition to get the values\n#sum_hours_rain=uxrain_mean_aft.groupby_bins(\"n_face\",[.01e-6,100]).groups\n#sum_hours_rain\n\ndaily_rain=uxrain_mean_aft.resample(time='D')\n\ndaily_mor_rain=uxrain_mean_mor.resample(time='D')\ndaily_smois=uxsmois_mean_mor.resample(time='D')\n#dailyqv=qv_mor.resample(time='D')\n#condition = daily_rain > 0.01e-6\n\n#uxrain1=daily_rain.where(condition).sum(dim=\"time\")\nres_rain=daily_rain.sum()\nres_mor_rain=daily_mor_rain.sum()\nres_smois=daily_smois.sum()\n#res_qv=dailyqv.mean()\n\nres_smois.mean(dim=\"time\").plot(\n    rasterize=True,\n    periodic_elements=\"exclude\",\n    title=\"Mean Total Soil Moisture (sum of layers), Morning\",\n    **plot_opts,\n) * features","key":"OH5XdKrf4K"},{"type":"output","id":"-KGmbm0pLOFl7rjlqrous","data":[],"key":"rCwIaNHpRq"}],"key":"KIcffUeHKc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"agg_rain=res_rain.where((res_mor_rain<0.02e-5) & (res_rain>1e-5))\nagg_rain_smois=agg_rain.where((res_smois>0.1) & (res_smois<=1)).count(dim=\"time\")\nagg_rain_smois.plot(\n    rasterize=True,\n    periodic_elements=\"exclude\",\n    clim=(1,15),\n    title=\"Afternoon Rainfall, with no morning rainfall\",\n    **plot_opts,\n) * features","key":"YTrPqU2IvP"},{"type":"output","id":"8MsLZyPXcHTM4kmF2eRHI","data":[],"key":"EpawJyM1yO"}],"key":"YofUBrJbYw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#Soil moisture anomalies\n#Remove water values\n\nsmois_valid=res_smois.where((res_smois<=1))\n\nsmois_anom=smois_valid-smois_valid.mean(dim=\"time\")\n\nmean_smois_anom_rain=smois_anom.where((res_mor_rain<0.02e-5) & (res_rain>1e-5)).mean(dim=\"time\")\n\nmean_smois_anom_rain.plot(\n    rasterize=True,\n    periodic_elements=\"exclude\",\n    title=\"JJA ICON Morning Soil Moisture Anomaly (with Afternoon Rainfall)\",\n    **plot_opts,\n) * features","key":"SVdFzEMSwv"},{"type":"output","id":"GjXYlV4NB5g5S39s1XXze","data":[],"key":"Y4grfhLuQo"}],"key":"Y7hAtmKJ3M"}],"key":"pdrFZUvPyk"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Reencode Wrf Conus","url":"/notebooks/reencode-wrf-conus","group":"Notebooks (work in progress)"},"next":{"title":"Soilmoisture Precip MPAS","url":"/notebooks/soilmoisture-precip-mpas","group":"Notebooks (work in progress)"}}},"domain":"http://localhost:3000"}